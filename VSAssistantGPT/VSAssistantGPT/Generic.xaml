<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:cpGames.VSA">
    
    <!-- Converters -->
    <local:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <local:BoolToVisibilityInvConverter x:Key="BoolToVisibilityInvConverter" />
    <local:BoolToInvBoolConverter x:Key="BoolToInvBoolConverter" />
    <!-- Converters -->

    <!-- Flat ComboBox -->
    <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="Transparent" />
    <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
    <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
    <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="2" Name="Border"
                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                    CornerRadius="0" BorderThickness="1, 1, 1, 1"
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
            <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444" Name="ButtonBorder"
                    CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0"
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

            <Path Name="Arrow" Grid.Column="1"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                  HorizontalAlignment="Center" Fill="White"
                  VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Black" />
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="Black" />
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E" />
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Panel.Background" TargetName="Border"
                        Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                <Setter Property="Panel.Background" TargetName="ButtonBorder"
                        Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                <Setter Property="Border.BorderBrush" TargetName="ButtonBorder"
                        Value="{StaticResource ComboBoxDisabledBorderBrush}" />
                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
        <Setter Property="TextElement.Foreground" Value="Black" />
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                                      ClickMode="Press" Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                        <ContentPresenter Grid.Column="1" Name="ContentSite" Margin="5, 3, 23, 3"
                                          IsHitTestVisible="False"
                                          HorizontalAlignment="Left" VerticalAlignment="Center"
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" />
                        <TextBox Grid.Column="0" Name="PART_EditableTextBox" Margin="3, 3, 23, 3"
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden"
                                 Foreground="White"
                                 Background="Transparent"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Center"
                                 Focusable="True">
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox">
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>
                        <!-- Popup showing items -->
                        <Popup Name="Popup" Placement="Bottom"
                               Focusable="False" AllowsTransparency="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">
                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                                <Border Name="DropDownBorder" Background="Black" Margin="0, 1, 0, 0"
                                        CornerRadius="0" BorderThickness="1,1,1,1"
                                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" />
                                <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95" />
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground"
                                    Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible" />
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End of Flat ComboBox -->

    <!-- Transparent TextBlock -->
    <Style x:Key="TextBlockTransparentStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
    </Style>
    <!-- End of Transparent TextBlock -->

    <!-- Transparent TextBox -->
    <Style x:Key="TextBoxTransparentStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="CaretBrush" Value="White" />
    </Style>
    <!-- End of Transparent TextBlock -->

    <!-- Input TextBox -->
    <Style x:Key="TextBoxInputStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="Black" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="CaretBrush" Value="White" />
    </Style>
    <!-- End of Transparent TextBlock -->

    <!-- Default Label -->
    <Style TargetType="Label">
        <Setter Property="Foreground" Value="White" />
    </Style>
    <!-- End of Default Label -->

    <!-- Default TextBox -->
    <Style TargetType="TextBox">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#FF2D2D30" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="MinHeight" Value="20" />
    </Style>
    <!-- End of Default TextBox -->

    <local:ImagePathConverter x:Key="ImagePathConverter" />

    <!-- Default Image Button -->
    <Style x:Key="ImageButtonStyle" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid Width="16" Height="16" Margin="2">
                        <!-- White Tint Border -->
                        <Border x:Name="whiteTint" Background="White" Opacity="1">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ImagePathConverter}}"/>
                            </Border.OpacityMask>
                        </Border>
                        <!-- Blue Tint Border (hidden by default) -->
                        <Border x:Name="blueTint" Background="#FFAAAAFF" Visibility="Hidden">
                            <Border.OpacityMask>
                                <ImageBrush ImageSource="{Binding Path=Tag, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource ImagePathConverter}}"/>
                            </Border.OpacityMask>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="True">
                            <Setter TargetName="whiteTint" Property="Opacity" Value="1"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="whiteTint" Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="blueTint" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="False">
                            <Setter TargetName="blueTint" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="IsEnabled" Value="{Binding Source={x:Static local:ProjectUtils.ActiveProject}, Path=Working, Converter={StaticResource BoolToInvBoolConverter}}"/>
    </Style>
    <!-- Default Image Button -->

    <!-- Default TabControl -->
    <Style TargetType="TabControl">
        <Setter Property="Background" Value="#111111" />
        <Setter Property="BorderThickness" Value="0" />
    </Style>
    <!-- End of Default TabControl -->

    <!-- Default TabItem -->
    <Style TargetType="TabItem">
        <Setter Property="Background" Value="#FF2D2D30" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Name="Border" Background="{TemplateBinding Background}"
                            BorderThickness="0" Padding="5,2">
                        <ContentPresenter x:Name="ContentSite" VerticalAlignment="Center" HorizontalAlignment="Center"
                                          ContentSource="Header" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <!-- Selected State -->
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#111111" />
                        </Trigger>

                        <!-- Mouse-Over State -->
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="#FF404040" />
                        </Trigger>

                        <!-- Disabled State -->
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ContentSite" Property="TextElement.Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <!-- End of Default TabItem -->

    <!-- Default ProgressBar -->
    <Style TargetType="ProgressBar">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#FF2D2D30" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinHeight" Value="20" />
    </Style>
    <!-- End of Default ProgressBar -->

    <!-- Default CheckBox -->
    <Style TargetType="CheckBox">
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Background" Value="#FF2D2D30" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="CheckBox">
                    <Grid HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Border Background="{TemplateBinding Background}"
                                Width="13" Height="13"
                                VerticalAlignment="Center"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="1">
                            <Path x:Name="CheckMark"
                                  Data="M 0 0 L 7 7 M 0 7 L 7 0"
                                  Stroke="White" StrokeThickness="2"
                                  SnapsToDevicePixels="True"
                                  Stretch="None"
                                  VerticalAlignment="Center"
                                  HorizontalAlignment="Center"
                                  Visibility="Collapsed" />
                        </Border>
                        <ContentPresenter Grid.Column="1"
                                          Content="{TemplateBinding Content}"
                                          ContentTemplate="{TemplateBinding ContentTemplate}"
                                          VerticalAlignment="Center"
                                          Margin="10,0,0,0" />
                        <!-- Added left margin for spacing -->
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- End of Default CheckBox -->

    <!-- Modified Rectangle Style -->
    <Style TargetType="Rectangle" x:Key="TintRectangleStyle">
        <Setter Property="Fill" Value="Transparent" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Modified}" Value="True">
                <Setter Property="Fill" Value="Yellow" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <!-- End of Modified Rectangle Style -->

    <ControlTemplate x:Key="SimpleMenuItemTemplate" TargetType="{x:Type MenuItem}">
        <Border x:Name="Border" Background="{TemplateBinding Background}" Padding="10">
            <StackPanel Orientation="Horizontal">
                <ContentPresenter ContentSource="Header" VerticalAlignment="Center" />
                <Popup IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                       Placement="Right" Focusable="False">
                    <Border Background="Black">
                        <ItemsPresenter />
                    </Border>
                </Popup>
            </StackPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="#FF444444" />
            </Trigger>
            <Trigger Property="IsSubmenuOpen" Value="True">
                <Setter TargetName="Border" Property="Background" Value="#FF555555" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <ControlTemplate x:Key="SimpleMenuTemplate" TargetType="{x:Type ContextMenu}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}">
            <StackPanel IsItemsHost="True" />
        </Border>
    </ControlTemplate>

    <Style TargetType="Expander">
        <Setter Property="Foreground" Value="White" />
    </Style>

</ResourceDictionary>